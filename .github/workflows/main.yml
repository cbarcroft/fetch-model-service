name: Deploy to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    outputs:
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push API Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:build-cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:build-cache,mode=max

      - name: Build and Push Streamlit Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./streamlit_app
          file: ./streamlit_app/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/streamlit-app:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/streamlit-app:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:build-cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:build-cache,mode=max

  deploy_api:
    name: Deploy API to EKS
    runs-on: ubuntu-latest
    needs: build 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.EKS_CLUSTER_NAME }}

      - name: Deploy API to EKS
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REGISTRY: ${{ needs.build.outputs.ecr_registry }}
        run: |
          sed -i "s|<ECR_REGISTRY>/<ECR_REPOSITORY>:latest|$ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:$IMAGE_TAG|g" kubernetes/deployment.yaml
          kubectl apply -f kubernetes/deployment.yaml

      - name: Verify API Deployment
        run: kubectl rollout status deployment/${{ vars.DEPLOYMENT_NAME }} -n ${{ vars.K8S_NAMESPACE || 'default' }}

      - name: Deploy Horizontal Pod Autoscaler (HPA)
        run: kubectl apply -f kubernetes/hpa.yaml

  deploy_streamlit:
    name: Deploy Streamlit to EKS
    runs-on: ubuntu-latest
    needs: [build, deploy_api]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.EKS_CLUSTER_NAME }}

      - name: Deploy Streamlit to EKS
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REGISTRY: ${{ needs.build.outputs.ecr_registry }}
        run: |
          sed -i "s|<ECR_REGISTRY>/streamlit-app:latest|$ECR_REGISTRY/streamlit-app:$IMAGE_TAG|g" kubernetes/streamlit-deployment.yaml
          kubectl apply -f kubernetes/streamlit-deployment.yaml

      - name: Verify API Deployment
        run: kubectl rollout status deployment/streamlit-app -n ${{ vars.K8S_NAMESPACE || 'default' }}
